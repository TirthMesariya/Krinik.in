# Generated by Django 5.1.2 on 2024-10-26 04:39

import django.db.models.deletion
import django_mysql.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='video')),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ad1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_list', django_mysql.models.ListCharField(models.URLField(), blank=True, max_length=10049, null=True, size=50)),
                ('index', models.IntegerField(blank=True, null=True)),
                ('remove_index', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Add_Amount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('add_amount', models.IntegerField(default=0)),
                ('total_amount', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='address_data',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('pincode', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='All_Transcrion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(max_length=500)),
                ('order_id', models.CharField(max_length=500)),
                ('amount', models.FloatField(max_length=500)),
                ('status', models.CharField(max_length=500)),
                ('credit_debit', models.CharField(blank=True, max_length=50, null=True)),
                ('date_time', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='League',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('league_name', models.CharField(blank=True, max_length=50, null=True)),
                ('short_league_name', models.CharField(blank=True, max_length=50, null=True)),
                ('start_league_date', models.CharField(blank=True, max_length=50, null=True)),
                ('end_league_date', models.CharField(blank=True, max_length=50, null=True)),
                ('league_image', models.ImageField(upload_to='league_image_media')),
            ],
        ),
        migrations.CreateModel(
            name='login_user',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=50)),
                ('password', models.CharField(max_length=20)),
                ('admin_type', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='new',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('widget_group_ids', django_mysql.models.ListTextField(models.IntegerField(), blank=True, null=True, size=100)),
            ],
        ),
        migrations.CreateModel(
            name='Scrach_coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='user_doc')),
                ('coupon_point', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='send_otp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='user_document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aadhar_card_front', models.FileField(blank=True, null=True, upload_to='user_doc')),
                ('aadhar_card_back', models.FileField(blank=True, null=True, upload_to='user_doc')),
                ('pan_card_front', models.FileField(blank=True, null=True, upload_to='user_doc')),
                ('pan_card_back', models.FileField(blank=True, null=True, upload_to='user_doc')),
                ('account_number', models.IntegerField(blank=True, null=True)),
                ('ifsc_code', models.CharField(blank=True, max_length=100, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=100, null=True)),
                ('branch_name', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Player_ID', models.CharField(max_length=500)),
                ('Player_Name', models.CharField(max_length=300)),
                ('Total_Play_Coin', models.FloatField(default=0.0)),
                ('Total_Winning_Coin', models.FloatField(default=0.0)),
                ('Add_Coin_In_Play', models.FloatField(default=0.0)),
                ('Add_Coin_In_Winning', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='Wallet_transactions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=500)),
                ('mobile_no', models.IntegerField()),
                ('transactions_id', models.CharField(max_length=500)),
                ('mode', models.CharField(max_length=500)),
                ('amount', models.FloatField()),
                ('status', models.CharField(max_length=500)),
                ('credit_debit', models.CharField(blank=True, max_length=50, null=True)),
                ('date_time', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Withdraw_history',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Player_Name', models.CharField(max_length=300)),
                ('Payment_Method', models.CharField(max_length=300)),
                ('Account', models.CharField(max_length=300)),
                ('Amount', models.FloatField(default=0.0)),
                ('Status', models.CharField(max_length=300)),
                ('Action', models.CharField(default='check', max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_start_date', models.CharField(blank=True, max_length=50, null=True)),
                ('match_end_date', models.CharField(blank=True, max_length=50, null=True)),
                ('match_display_name', models.CharField(blank=True, default='', max_length=255)),
                ('player_list', django_mysql.models.ListTextField(models.IntegerField(), blank=True, null=True, size=100)),
                ('select_league', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.league')),
            ],
        ),
        migrations.CreateModel(
            name='Add_Pool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pool_type', models.CharField(blank=True, max_length=50, null=True)),
                ('pool_name', models.CharField(blank=True, max_length=50, null=True)),
                ('price', django_mysql.models.ListTextField(models.IntegerField(), blank=True, null=True, size=100)),
                ('winning_price', models.FloatField()),
                ('fantacy_start_date', models.CharField(blank=True, max_length=50, null=True)),
                ('fantacy_end_date', models.CharField(blank=True, max_length=50, null=True)),
                ('select_match', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.match')),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player_name', models.CharField(blank=True, max_length=50, null=True)),
                ('player_short_name', models.CharField(blank=True, max_length=50, null=True)),
                ('player_image', models.ImageField(upload_to='league_image_media')),
                ('total_run', models.IntegerField(blank=True, null=True)),
                ('match_captain', models.CharField(blank=True, max_length=50, null=True)),
                ('match_vice_captain', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.CharField(blank=True, default='Unable', max_length=50, null=True)),
                ('league_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.league')),
            ],
        ),
        migrations.CreateModel(
            name='Pair_with_captain_and_v_captain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pool_type', models.CharField(blank=True, max_length=50, null=True)),
                ('limit', models.IntegerField()),
                ('pool_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.add_pool')),
                ('select_match', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.match')),
                ('player_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pair_with_v1', to='myapp.player')),
                ('player_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pair_with_v2', to='myapp.player')),
                ('player_3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pair_with_v3', to='myapp.player')),
            ],
        ),
        migrations.CreateModel(
            name='Pair_with_captain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pool_type', models.CharField(blank=True, max_length=50, null=True)),
                ('limit', models.IntegerField()),
                ('pool_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.add_pool')),
                ('select_match', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.match')),
                ('player_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pair_with1', to='myapp.player')),
                ('player_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pair_with2', to='myapp.player')),
            ],
        ),
        migrations.CreateModel(
            name='Pair',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pool_type', models.CharField(blank=True, max_length=50, null=True)),
                ('limit', models.IntegerField(blank=True, null=True)),
                ('pool_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.add_pool')),
                ('select_match', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.match')),
                ('player_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pool_player1', to='myapp.player')),
                ('player_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pool_player2', to='myapp.player')),
            ],
        ),
        migrations.AddField(
            model_name='match',
            name='disable_player_A',
            field=models.ManyToManyField(blank=True, null=True, related_name='disable_player_list_A', to='myapp.player'),
        ),
        migrations.AddField(
            model_name='match',
            name='disable_player_B',
            field=models.ManyToManyField(blank=True, null=True, related_name='disable_player_list_B', to='myapp.player'),
        ),
        migrations.AddField(
            model_name='match',
            name='select_player_A',
            field=models.ManyToManyField(blank=True, null=True, related_name='select_player_A', to='myapp.player'),
        ),
        migrations.AddField(
            model_name='match',
            name='select_player_B',
            field=models.ManyToManyField(blank=True, null=True, related_name='select_player_B', to='myapp.player'),
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_name', models.CharField(blank=True, max_length=50, null=True)),
                ('team_short_name', models.CharField(blank=True, max_length=50, null=True)),
                ('team_image', models.ImageField(upload_to='league_image_media')),
                ('team_date', models.DateField(auto_now=True)),
                ('league_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.league')),
            ],
        ),
        migrations.CreateModel(
            name='Pool_Declare',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_run', models.IntegerField(blank=True, null=True)),
                ('date_time', models.DateTimeField(auto_now=True, null=True)),
                ('player_declare', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.player')),
                ('pool_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.add_pool')),
                ('select_match', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.match')),
                ('team_declare', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.team')),
            ],
        ),
        migrations.CreateModel(
            name='Pool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pool_type', models.CharField(blank=True, max_length=50, null=True)),
                ('pool_name', models.CharField(blank=True, max_length=50, null=True)),
                ('entry_fee', models.IntegerField(blank=True, null=True)),
                ('start_pool_date', models.CharField(blank=True, max_length=50, null=True)),
                ('end_pool_date', models.CharField(blank=True, max_length=50, null=True)),
                ('league_data', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='league_pools', to='myapp.league')),
                ('player_name1', models.ManyToManyField(blank=True, null=True, related_name='player1_pools', to='myapp.player')),
                ('player_name2', models.ManyToManyField(blank=True, null=True, related_name='player2_pools', to='myapp.player')),
                ('team_name1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='team1_pools', to='myapp.team')),
                ('team_name2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='team2_pools', to='myapp.team')),
            ],
        ),
        migrations.AddField(
            model_name='player',
            name='team_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.team'),
        ),
        migrations.AddField(
            model_name='match',
            name='select_team_A',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='team_A', to='myapp.team'),
        ),
        migrations.AddField(
            model_name='match',
            name='select_team_B',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='team_B', to='myapp.team'),
        ),
        migrations.CreateModel(
            name='Captain_Add_Pool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_start_date', models.CharField(blank=True, max_length=50, null=True)),
                ('match_display_name', models.CharField(blank=True, default='', max_length=255)),
                ('select_league', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.league')),
                ('captain', models.ManyToManyField(blank=True, related_name='captain_name', to='myapp.player')),
                ('select_player_A', models.ManyToManyField(blank=True, related_name='captain_select_player_A', to='myapp.player')),
                ('select_player_B', models.ManyToManyField(blank=True, related_name='captain_select_player_B', to='myapp.player')),
                ('select_team_A', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='captain_team_A', to='myapp.team')),
                ('select_team_B', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='captain_team_B', to='myapp.team')),
            ],
        ),
        migrations.CreateModel(
            name='user',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(blank=True, max_length=100, null=True)),
                ('dob', models.CharField(blank=True, max_length=100, null=True)),
                ('user_id', models.CharField(blank=True, max_length=100, null=True)),
                ('referred_code', models.CharField(default='', max_length=100)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('mobile_no', models.IntegerField()),
                ('email', models.EmailField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(blank=True, default='unblock', max_length=10, null=True)),
                ('date_time', models.DateTimeField(auto_now=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='league_image_media')),
                ('wallet_amount', models.IntegerField(blank=True, null=True)),
                ('winning_amount', models.IntegerField(blank=True, null=True)),
                ('device_token', models.CharField(blank=True, max_length=50, null=True)),
                ('profile_status', models.CharField(blank=True, default='pending', max_length=255, null=True)),
                ('rejection_reason', models.TextField(blank=True, null=True)),
                ('referral_by', models.CharField(blank=True, max_length=10, null=True)),
                ('address', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.address_data')),
                ('scrach_list', models.ManyToManyField(blank=True, null=True, to='myapp.scrach_coupon')),
                ('user_doc', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.user_document')),
            ],
        ),
        migrations.CreateModel(
            name='referral',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('read', models.BooleanField(default=False)),
                ('referred_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='referral_referred_user', to='myapp.user')),
                ('user_data', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='referral_user_data', to='myapp.user')),
            ],
        ),
        migrations.CreateModel(
            name='notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('title', models.CharField(max_length=255)),
                ('read', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user_data', models.ManyToManyField(blank=True, null=True, to='myapp.user')),
            ],
        ),
        migrations.CreateModel(
            name='game_amount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transactions_id', models.CharField(max_length=500)),
                ('credit_debit', models.CharField(max_length=500)),
                ('amount', models.FloatField()),
                ('status', models.CharField(max_length=500)),
                ('date_time', models.DateTimeField(auto_now_add=True)),
                ('pool', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.add_pool')),
                ('username', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.user')),
            ],
        ),
        migrations.CreateModel(
            name='all_match_details',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pool_type', models.CharField(blank=True, max_length=50, null=True)),
                ('score', models.IntegerField(default=0)),
                ('invest_amount', models.IntegerField()),
                ('multi_x', models.FloatField(blank=True, null=True)),
                ('total_amount', models.IntegerField()),
                ('match_status', models.CharField(blank=True, default='upcoming', max_length=50, null=True)),
                ('players_score', models.TextField(blank=True, default='[]', null=True)),
                ('winning_status', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('pool_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.add_pool')),
                ('match', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.match')),
                ('captain', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='all_match_captain', to='myapp.player')),
                ('player', models.ManyToManyField(blank=True, null=True, to='myapp.player')),
                ('vice_captain', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='all_match_vice_captain', to='myapp.player')),
                ('user_data', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.user')),
            ],
        ),
        migrations.CreateModel(
            name='user_pool_history',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pool_type', models.CharField(blank=True, max_length=20, null=True)),
                ('entry_fee', models.IntegerField()),
                ('winning_amount', models.IntegerField()),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('match', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.match')),
                ('player_pair', models.ManyToManyField(blank=True, related_name='select_player_pair', to='myapp.player')),
                ('pool_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.add_pool')),
                ('user_data', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.user')),
            ],
        ),
        migrations.CreateModel(
            name='User_store_team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player_data', models.ManyToManyField(blank=True, null=True, to='myapp.player')),
                ('user_data', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.user')),
            ],
        ),
        migrations.CreateModel(
            name='Vice_Captain_Add_Pool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_start_date', models.CharField(blank=True, max_length=50, null=True)),
                ('match_display_name', models.CharField(blank=True, default='', max_length=255)),
                ('captain', models.ManyToManyField(blank=True, related_name='main_captain_name', to='myapp.player')),
                ('select_league', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.league')),
                ('select_player_A', models.ManyToManyField(blank=True, related_name='vice_captain_select_player_A', to='myapp.player')),
                ('select_player_B', models.ManyToManyField(blank=True, related_name='vice_captain_select_player_B', to='myapp.player')),
                ('select_team_A', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vice_captain_team_A', to='myapp.team')),
                ('select_team_B', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vice_captain_team_B', to='myapp.team')),
                ('vice_captain', models.ManyToManyField(blank=True, related_name='select_vice_captain', to='myapp.player')),
            ],
        ),
        migrations.CreateModel(
            name='view_contest_details',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField()),
                ('refund', models.BooleanField(blank=True, default=True, null=True)),
                ('match', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.match')),
                ('player_pair', models.ManyToManyField(blank=True, null=True, to='myapp.player')),
                ('pool_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.add_pool')),
                ('user_data', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.user')),
            ],
        ),
    ]
